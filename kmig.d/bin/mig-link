#!/usr/bin/perl -w
###############################################################################
=pod

=head1 NAME

mig-link 

Associate the specified file with a parent table within the migration schema.

=head1 SYNOPSIS

B<mig-link> <file> <parent table>

=cut

###############################################################################

use strict;
use Switch;
use Env qw(
    HOME MYSQL_HOST MYSQL_TCP_PORT MYSQL_USER MYSQL_DATABASE MYSQL_PW
    MIGSCHEMA MIGBASEWORKDIR MIGBASEGITDIR MIGGITDIR MIGWORKDIR
);
use Pod::Usage;
use DBI;
use Cwd 'abs_path';
use FindBin;
my $mig_bin = "$FindBin::Bin/";
use lib "$FindBin::Bin/";
use KMig;

pod2usage(-verbose => 2) if ! $ARGV[0] || $ARGV[0] eq '--help';

KMig::die_if_no_env_migschema();
KMig::die_if_mig_tracking_table_does_not_exist();

my $file = abs_path($ARGV[0]);
if ($file =~ /^$MIGBASEWORKDIR/) {
    link_table(@ARGV);
} else {
    print "File falls outside of MIGWORKDIR ($MIGWORKDIR): $file\n";
}

exit 0;

###############################################################################

sub link_table {
    my $file = abs_path(shift);
    my $table = shift;

    if ($table !~ /^m_/) {
        die "for safety, since kmig 'link'ing really just adds columns to the parent table, this action is restricted to tables prefixed with m_";
    }

    if (! KMig::check_db_migschema_for_specific_table($table)) {
        warn "table $table not found, but will attempt to be vivicated during staging\n";
    }

    my $tracked_file_id = KMig::check_for_tracked_file($file);
    if ($tracked_file_id) {
        my $data = KMig::status_this_file($file);

        print "linking file to parent table: $file -> $table\n";

        my $dbh = KMig::db_connect();
        my $sth = $dbh->prepare("
            SELECT base_filename
            FROM m_tracked_file
            WHERE parent_table = " . $dbh->quote($table) . "
            AND base_filename <> " . $dbh->quote($file) . ";"
        );
        my $rv = $sth->execute()
            || die "Error checking $MIGSCHEMA.tracked_file: $!";
        my @cols = $sth->fetchrow_array;
        $sth->finish;
        if ($cols[0]) { # found
            die "table ($table) already linked to a different file: $cols[0]\n";
        }
        $rv = $dbh->do("
            UPDATE m_tracked_file
            SET parent_table = " . $dbh->quote($table) . "
            WHERE base_filename = " . $dbh->quote($file) . "
            ;
        ") || die "Error updating table m_tracked_file: $!\n";
        KMig::db_disconnect($dbh);
    } else {
        print "File not currently tracked: $file\n";
    }
}
