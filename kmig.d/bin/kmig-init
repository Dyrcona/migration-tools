#!/usr/bin/perl -w
###############################################################################
=pod

=head1 NAME

kmig-init - This will add or recreate tracking tables for the B<kmig> toolset
to the database specified by the current kmig environment.

In practice, you should invoke 'kmig env use schema_name' prior to calling
B<init>

=head1 SYNOPSIS

B<kmig-init>

B<kmig-init> <help>

=cut

###############################################################################

use strict;
use Switch;
use Env qw(
    HOME MYSQL_HOST MYSQL_TCP_PORT MYSQL_USER MYSQL_DATABASE MYSQL_PW
    MIGSCHEMA MIGBASEWORKDIR MIGBASEGITDIR MIGGITDIR MIGWORKDIR
);
use Pod::Usage;
use DBI;
use FindBin;
my $mig_bin = "$FindBin::Bin/";
my $mig_sql = $mig_bin . "../sql/init/";
use lib "$FindBin::Bin/";
use KMig;

pod2usage(-verbose => 2) if $ARGV[0];

KMig::die_if_no_env_migschema();

if (! KMig::check_for_db_migschema()) {
    die "could not find the schema";
}

if (! KMig::check_db_migschema_for_migration_tables()) {
    try_to_init_schema_with_migration_tools();
}
KMig::die_if_mig_tracking_table_exists();
KMig::die_if_mig_column_tracking_table_exists();
loop_through_mig_sql_templates();

exit 0;

###############################################################################

sub try_to_init_schema_with_migration_tools {
    KMig::die_if_no_migration_tools();
    print "Calling mt_init() and mt_build()\n";
    my $dbh = KMig::db_connect();
    my $rv = $dbh->do("SELECT mt_init();")
        || die "Error running mt_init(): $!\n";
    print "mt_init() finished\n";
    my $rv2 = $dbh->do("SELECT mt_build();")
        || die "Error running mt_build(): $!\n";
    print "migration_tools.build() finished\n";
    KMig::db_disconnect($dbh);
}

sub loop_through_mig_sql_templates {
    print "Looping through kmig.d/sql/init/ templates\n";
    opendir my $dir, $mig_sql or die "Cannot open directory: $!";
    my @files = sort readdir $dir;
    closedir $dir;
    foreach my $file (@files) {
        if ($file =~ /.sql$/) {
            print "executing $file:\n";
            system( $mig_bin . "kmig-sql", ('-e',"source $mig_sql$file") )
        }
    }
}

